#include<stdio.h>
#include<unistd.h>
#include<stdlib.h>
#include<semaphore.h>
#include<pthread.h>
#define MAX_ITEMS 4

sem_t full,empty;
pthread_mutex_t mutex;
char buffer[MAX_ITEMS] [100];
int in = 0;
int out = 0;
int count = 0;

void* producer(void* ptr)
{
    for (int i=0;i<4;i++)
    {
     sem_wait(&empty);
      //pthread_mutex_lock(&mutex);
      printf("\nEnter any Item: ");
      scanf("%s", buffer[in]);
      
      //buffer[in] = item;
      in = (in + 1)%4;
    
      count = count + 1;
      //pthread_mutex_unlock(&mutex);
      sem_post(&full);
    
    }
}

void* consumer(void* ptr)
{
   for (int i=0;i<4;i++)
   {
     sem_wait(&full);
      //pthread_mutex_lock(&mutex);
      printf("\nItem is: %s", buffer[out]);
      out = (out + 1) % 4;
   
      count = count - 1;
      //pthread_mutex_unlock(&mutex);
      sem_post(&empty);
   }
}

int main()
{
   pthread_mutex_init(&mutex,NULL);
   sem_init(&full,0,0);
   sem_init(&empty,0,4);
   pthread_t tid1,tid2;
   

   pthread_create(&tid1,NULL,&producer,NULL);
   pthread_create(&tid2,NULL,&consumer,NULL);
   
   pthread_join(tid1,NULL);
   pthread_join(tid2,NULL);
}